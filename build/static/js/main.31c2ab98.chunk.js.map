{"version":3,"sources":["utils/api.ts","store/actions/gameActions.ts","components/Bet.tsx","store/actions/teamActions.ts","components/Login.tsx","App.tsx","store/reducers/teamReducer.ts","store/reducers/gameReducer.ts","store/index.ts","index.tsx"],"names":["axios","create","baseURL","getGames","weekId","dispatch","a","type","api","get","response","payload","data","styled","Paper","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","BasicGrid","user","React","isLoading","setIsLoading","isSaved","setIsSaved","weeks","setWeeks","Id","IsBetActive","currentWeek","setCurrentWeek","console","log","users","setUsers","Name","UserName","Password","IsAdmin","currentUser","setCurrentUser","useState","userBets","setUserBets","useDispatch","teams","useSelector","state","games","useEffect","length","then","userBets1","betUserId","map","game","GameBets","filter","x","UserId","bett","push","Bet","GameId","radioHandler","event","gameId","arr","newObj","betData","parseInt","target","value","obj","className","onChange","selectedOption","preventDefault","selectedUser","find","selectUser","user1","selectedWeek","selectWeek","week","HomeTeam","AwayTeam","name","toString","checked","disabled","Result","HomeWinPoint","DrawPoint","AwayWinPoint","onClick","post","Login","isSubmitted","setIsSubmitted","setUser","message","errorMessages","setErrorMessages","errors","renderErrorMessage","renderForm","onSubmit","document","forms","uname","pass","userData","catch","error","required","Content","Layout","Footer","App","style","marginTop","defaultState","loading","teamReducer","action","categoryReducer","rootReducer","combineReducers","gameReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.31c2ab98.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { env } from \"process\";\r\n\r\nexport default () => {\r\n  //const token = localStorage.getItem(\"token\");\r\n //http://localhost:3000\r\n //\"https://kankoo-backend.herokuapp.com\"\r\n  return axios.create({\r\n    baseURL:  \"https://kankoo-backend.herokuapp.com\",\r\n    /*headers: {\r\n      Authorization: token,\r\n    },*/\r\n  });\r\n};\r\n","import { Game, GameDispatch, GameForm } from \"../../types/game\";\r\nimport api from \"../../utils/api\";\r\n\r\nexport const getGames = (weekId: number) => async (dispatch: GameDispatch) => {\r\n  dispatch({ type: \"GET_GAMES_START\" });\r\n  try {\r\n    const response = await api().get<Game[]>(\"/fixture/\" + weekId);\r\n    dispatch({ type: \"GET_GAMES_SUCCESS\", payload: response.data });\r\n  } catch {\r\n    dispatch({ type: \"GET_GAMES_ERROR\" });\r\n  }\r\n};\r\n\r\nexport const addGame =\r\n  (form: GameForm) => async (dispatch: GameDispatch) => {\r\n    dispatch({ type: \"ADD_GAME_START\" });\r\n    try {\r\n      const response = await api().post<Game>(\"/add-game\", form);\r\n      dispatch({ type: \"ADD_GAME_SUCCESS\", payload: response.data });\r\n    } catch {\r\n      dispatch({ type: \"ADD_GAME_ERROR\" });\r\n    }\r\n  };\r\n\r\n  /*\r\nexport const updateGame =\r\n  (form: Partial<GameForm>, categoryId: number) =>\r\n  async (dispatch: GameDispatch) => {\r\n    dispatch({ type: \"UPDATE_GAME_START\" });\r\n    try {\r\n      const response = await api().put<Game>(\r\n        \"/categories/\" + categoryId,\r\n        form\r\n      );\r\n      dispatch({ type: \"UPDATE_GAME_SUCCESS\", payload: response.data });\r\n    } catch {\r\n      dispatch({ type: \"UPDATE_GAME_ERROR\" });\r\n    }\r\n  };\r\n\r\nexport const deleteGame =\r\n  (categoryId: number) => async (dispatch: GameDispatch) => {\r\n    dispatch({ type: \"DELETE_GAME_START\" });\r\n    try {\r\n      await api().delete(\"/categories/\" + categoryId);\r\n      dispatch({ type: \"DELETE_GAME_SUCCESS\", payload: categoryId });\r\n    } catch {\r\n      dispatch({ type: \"DELETE_GAME_ERROR\" });\r\n    }\r\n  };\r\n\r\n  */","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppState } from \"../store\";\r\nimport { getGames } from '../store/actions/gameActions';\r\nimport { getTeams } from \"../store/actions/teamActions\";\r\nimport Button from '@mui/material/Button';\r\nimport './Bet.css'\r\nimport { display } from '@mui/system';\r\nimport { User } from '../types/user';\r\nimport api from '../utils/api';\r\nimport { Bet, BetClient, BetServer } from '../types/bet';\r\nimport { Week } from '../types/week';\r\nimport { mainModule } from 'process';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\ninterface ChildProps {\r\n    user: User;\r\n}\r\n\r\n\r\nfunction addOrReplace(arr: BetClient[], newObj: BetClient) {\r\n    //const newArray = arr.filter(obj => obj.GameId !== newObj.GameId).concat(newObj)\r\n    var returnArray = [...arr.filter((obj) => obj.GameId !== newObj.GameId), { ...newObj }];\r\n    return returnArray;\r\n}\r\n\r\n\r\nexport default function BasicGrid({ user }: ChildProps) {\r\n\r\n    const [age, setAge] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [isSaved, setIsSaved] = React.useState(false);\r\n\r\n    const [weeks, setWeeks] = React.useState<Week[]>([]);\r\n    const [currentWeek, setCurrentWeek] = React.useState<Week>({\r\n        Id: 1,\r\n        IsBetActive: false\r\n    });\r\n\r\n    console.log('loginuser1');\r\n    console.log(user);\r\n\r\n    \r\n    const [users, setUsers] = React.useState<User[]>([]);\r\n\r\n    const [currentUser, setCurrentUser] = React.useState<User>({\r\n        Id: user.Id,\r\n        Name: user.Name,\r\n        UserName: user.UserName,\r\n        Password:'',\r\n        IsAdmin:user.IsAdmin\r\n    });\r\n    \r\n    \r\n    const [userBets, setUserBets] = useState<BetClient[]>([]);\r\n\r\n    const handleChange = (event: SelectChangeEvent) => {\r\n        setAge(event.target.value as string);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { data: teams } = useSelector(\r\n        (state: AppState) => state.teams\r\n    );\r\n\r\n    const { data: games } = useSelector(\r\n        (state: AppState) => state.games\r\n    );\r\n\r\n\r\n    // TEAMS\r\n    useEffect(() => {\r\n        !teams.length && dispatch(getTeams());\r\n    }, []);\r\n\r\n    // GAMES\r\n    useEffect(() => {\r\n        if (currentWeek) {\r\n            dispatch(getGames(currentWeek.Id));\r\n        }\r\n    }, [currentWeek.Id]);\r\n\r\n    // WEEKS\r\n    useEffect(() => {\r\n        api().get<Week[]>(\"/weeks\").then((response) => {\r\n            setWeeks(response.data);\r\n        });\r\n    }, []);\r\n\r\n    // USERS\r\n    useEffect(() => {\r\n        api().get<User[]>(\"/users\").then((response) => {\r\n            setUsers(response.data);\r\n        });\r\n    }, []);\r\n\r\n    // FILL USER BETS\r\n    useEffect(() => {\r\n\r\n        setIsLoading(true);\r\n        const userBets1: BetClient[] = ([]);\r\n        \r\n        let betUserId = currentUser.Id < 0 ? user.Id : currentUser.Id;\r\n\r\n        console.log('betUserId');\r\n        console.log(betUserId);\r\n        console.log('games');\r\n        console.log(games);\r\n\r\n        games.map(game => game.GameBets.filter(x => x.UserId === betUserId)?.map(bett => {\r\n            userBets1.push({\r\n                Bet: bett.Bet,\r\n                GameId: bett.GameId,\r\n                UserId: bett.UserId\r\n            })\r\n        }\r\n        ))\r\n\r\n        console.log('userBets1');\r\n        console.log(userBets1);\r\n\r\n        setUserBets(userBets1);\r\n        setIsLoading(false);\r\n    }, [games, currentWeek.Id, currentUser.Id]);\r\n\r\n\r\n    const options = [\r\n        { label: 'Roketle', value: -1 },\r\n        { label: '1', value: 1 },\r\n        { label: '0', value: 0 },\r\n        { label: '2', value: 2 },\r\n    ];\r\n\r\n    const [value, setSelectedOption] = React.useState(-1);\r\n\r\n    const selectWeek = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        event.preventDefault();\r\n        const value = event.target.value;\r\n        var selectedWeek = weeks.find(x => x.Id === parseInt(value));\r\n        if (selectedWeek) {\r\n            setCurrentWeek(selectedWeek);\r\n        }\r\n    };\r\n\r\n    const selectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        event.preventDefault();\r\n        const value = event.target.value;\r\n        var selectedUser = users.find(x => x.Id === parseInt(value));\r\n        if (selectedUser) {\r\n            setCurrentUser(selectedUser);\r\n        }\r\n    }; \r\n\r\n    const radioHandler = (event: React.ChangeEvent<HTMLInputElement>, gameId: number) => {\r\n        /*setIsLoading(true);\r\n\r\n        const betData: BetServer = {\r\n            bet: parseInt(event.target.value),\r\n            gameId: gameId,\r\n            userId: user.Id\r\n        };\r\n        api().post<Bet>(\"/add-bet\", betData).then(() => {\r\n            dispatch(getGames(1));\r\n            setIsLoading(false);\r\n        });*/\r\n\r\n        const betData: BetClient = {\r\n            Bet: parseInt(event.target.value),\r\n            GameId: gameId,\r\n            UserId: user.Id\r\n        };\r\n        setUserBets(addOrReplace(userBets, betData));\r\n    };\r\n\r\n    const buttonHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n\r\n        if (userBets && userBets.length > 0) {\r\n            setIsLoading(true);\r\n\r\n            console.log('games1');\r\n            console.log(games);\r\n\r\n            api().post<Bet[]>(\"/add-bulk-bets\", userBets).then(() => {\r\n                dispatch(getGames(currentWeek.Id));\r\n                setIsLoading(false);\r\n                setIsSaved(true);\r\n                //setUserBets(userBets);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container-1\">\r\n                <div className=\"two alt-two\">\r\n                    <h1>KANKOO LEAGUE\r\n                        <span>Merhaba {user.Name}</span>\r\n                    </h1>\r\n                </div>\r\n            </div>\r\n\r\n            {user.IsAdmin &&\r\n                <div className=\"container-1\">\r\n                    <select className='selectbox' onChange={(selectedOption) => selectUser(selectedOption)}>\r\n                        <option value={user.Id}>Kullanici</option>\r\n                        {\r\n                        users.filter(x => !x.IsAdmin).map((user1) => (\r\n                            <option key={user1.Id} value={user1.Id}>{user1.Name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            }\r\n\r\n\r\n            <div className=\"container-1\">\r\n                <select className='selectbox'\r\n                    onChange={(selectedOption) => selectWeek(selectedOption)}>\r\n                    {weeks.map((week) => (\r\n                        <option key={week.Id} value={week.Id}>{week.Id}. Hafta</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {games.map((game) => {\r\n                //console.log(game)\r\n\r\n                //console.log('bet gameIds')\r\n                //console.log(userBets);\r\n                //userBets.map(x => console.log('gameId' + x.GameId))\r\n                return (\r\n                    <div className=\"container-1\" key={game.GameId + 'key'}>\r\n                        <div className=\"grid_div\">\r\n                            <p className='teamName'>{game.HomeTeam.Name}</p>\r\n                        </div>\r\n                        <div className=\"grid_div\">\r\n                            <p className='teamName'>{game.AwayTeam.Name}</p>\r\n                        </div>\r\n                        {/* <div className=\"grid_div\" style={{ display: 'none' }}>\r\n                            <select className='selectbox'\r\n                                value={value}\r\n                                onChange={(selectedOption) => selectChange(selectedOption, game.GameId)}>\r\n                                {options.map((option) => (\r\n                                    <option value={option.value}>{option.label}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div> */}\r\n                        <div className=\"grid_div_betselect\">\r\n                            <div className=\"radiogroup\">\r\n                                <input type=\"radio\" value=\"1\" name={game.GameId.toString() + 'bet'}\r\n                                    checked={userBets.find(x => x.GameId == game.GameId)?.Bet === 1}\r\n                                    disabled={isLoading || !currentWeek.IsBetActive}\r\n                                    className={((!currentWeek.IsBetActive && game.Result === 1 && game.Result === userBets.find(x => x.GameId == game.GameId)?.Bet) ? 'winner' : userBets.find(x => x.GameId == game.GameId)?.Bet === 1 ? 'looser' : '')}\r\n                                    onChange={(selectedOption) => radioHandler(selectedOption, game.GameId)} /> 1 {game.HomeWinPoint > 0 ? '(' + game.HomeWinPoint / 100 + ')' : ''}\r\n\r\n                                <input type=\"radio\" value=\"0\" name={game.GameId.toString() + 'bet'}\r\n                                    checked={userBets.find(x => x.GameId == game.GameId)?.Bet === 0}\r\n                                    disabled={isLoading || !currentWeek.IsBetActive}\r\n                                    className={((!currentWeek.IsBetActive && game.Result === 0 && game.Result === userBets.find(x => x.GameId == game.GameId)?.Bet) ? 'winner' : userBets.find(x => x.GameId == game.GameId)?.Bet === 0 ? 'looser' : '')}\r\n                                    onChange={(selectedOption) => radioHandler(selectedOption, game.GameId)} /> 0 {game.DrawPoint > 0 ? '(' + game.DrawPoint / 100 + ')' : ''}\r\n\r\n                                <input type=\"radio\" value=\"2\" name={game.GameId.toString() + 'bet'}\r\n                                    checked={userBets.find(x => x.GameId == game.GameId)?.Bet === 2}\r\n                                    disabled={isLoading || !currentWeek.IsBetActive}\r\n                                    className={((!currentWeek.IsBetActive && game.Result === 2 && game.Result === userBets.find(x => x.GameId == game.GameId)?.Bet) ? 'winner' : userBets.find(x => x.GameId == game.GameId)?.Bet === 2 ? 'looser' : '')}\r\n                                    onChange={(selectedOption) => radioHandler(selectedOption, game.GameId)} /> 2 {game.AwayWinPoint > 0 ? '(' + game.AwayWinPoint / 100 + ')' : ''}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                );\r\n            })}\r\n\r\n            {!user.IsAdmin && isSaved &&\r\n                <div className=\"container-1\">\r\n                    Kaydedildi.\r\n                </div>\r\n            }\r\n\r\n            {!user.IsAdmin && !currentWeek.IsBetActive &&\r\n                <div className=\"container-1\">\r\n                    Bahisler kapalidir.\r\n                </div>\r\n            }\r\n\r\n            {!user.IsAdmin && currentWeek.IsBetActive &&\r\n                <div className=\"container-1\">\r\n                    <button onClick={buttonHandler} disabled={isLoading || !currentWeek.IsBetActive}>{userBets.length > 0 ? 'GUNCELLE' : 'OYNA'}</button>.\r\n                </div>\r\n            }\r\n\r\n        </>\r\n\r\n    );\r\n}","import { Team, TeamDispatch, TeamForm } from \"../../types/team\";\r\nimport api from \"../../utils/api\";\r\n\r\nexport const getTeams = () => async (dispatch: TeamDispatch) => {\r\n  dispatch({ type: \"GET_TEAMS_START\" });\r\n  try {\r\n    const response = await api().get<Team[]>(\"/teams\");\r\n    dispatch({ type: \"GET_TEAMS_SUCCESS\", payload: response.data });\r\n  } catch {\r\n    dispatch({ type: \"GET_TEAMS_ERROR\" });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ErrorMessageType, User } from \"../types/user\";\r\nimport api from \"../utils/api\";\r\n\r\nimport \"./Login.css\";\r\n\r\n\r\ninterface ChildProps {\r\n    isSubmitted: boolean;\r\n    setIsSubmitted: React.Dispatch<React.SetStateAction<boolean>>;\r\n    user: User;\r\n    setUser: React.Dispatch<React.SetStateAction<User>>;\r\n}\r\n\r\n\r\nexport default function Login({ isSubmitted, setIsSubmitted, user, setUser }: ChildProps) {\r\n    // React States\r\n    const [errorMessages, setErrorMessages] = useState<ErrorMessageType>({\r\n        name: '',\r\n        message: '',\r\n    }\r\n    );\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\"\r\n    };\r\n\r\n\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        //Prevent page reload\r\n        event.preventDefault();\r\n\r\n        var { uname, pass } = document.forms[0];\r\n\r\n        // Find user login info\r\n        api().get<User>(\"/users/\" + uname.value).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                const userData = response.data;\r\n                // Compare user info\r\n                if (userData) {\r\n                    if (userData.Password !== pass.value) {\r\n                        // Invalid password\r\n                        setErrorMessages({ name: \"pass\", message: errors.pass });\r\n                        setUser({\r\n                            Id: -1,\r\n                            Name: '',\r\n                            Password: '',\r\n                            UserName: '',\r\n                            IsAdmin:false\r\n                        });\r\n                    } else {\r\n                        setIsSubmitted(true);\r\n                        setUser(userData);\r\n                    }\r\n                } else {\r\n                    // Username not found\r\n                    setErrorMessages({ name: \"uname\", message: errors.uname });\r\n                    setUser({\r\n                        Id: -1,\r\n                        Name: '',\r\n                        Password: '',\r\n                        UserName: '',\r\n                        IsAdmin:false\r\n                    });\r\n                }\r\n            }\r\n        )\r\n        .catch(error => console.error('Error' + error));\r\n\r\n    };\r\n\r\n    // Generate JSX code for error message\r\n    const renderErrorMessage = (name: string) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    // JSX code for login form\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\" name=\"uname\" required />\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\" name=\"pass\" required />\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"login-form\">\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Route } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport AddGame from \"./components/AddGame\";\nimport BasicGrid from \"./components/Bet\";\nimport Login from \"./components/Login\";\nimport { useState } from \"react\";\nimport { User } from \"./types/user\";\n\nconst { Content, Footer } = Layout;\n\n\nfunction App() {\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const [user, setUser] = useState<User>({\n    Id: -1,\n    Name: '',\n    Password: '',\n    UserName: '',\n    IsAdmin:false\n}\n);\n\n  if(!isSubmitted && (!user || user.Id < 1) ) {\n    return <Login isSubmitted={isSubmitted} setIsSubmitted={setIsSubmitted} user={user} setUser={setUser} />\n  }\n\n  else {\n  return (\n    <Layout>\n      <Content\n        className=\"site-layout\"\n        style={{ padding: \"10px\", marginTop: 8 }}\n      >\n        <BasicGrid user={user} />\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        <h3>KANKOO 2022</h3>\n      </Footer>\n    </Layout>\n  );\n  }\n}\n\nexport default App;\n","import { TeamAction, TeamState } from \"../../types/team\";\r\n\r\nconst defaultState: TeamState = {\r\n  data: [],\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nconst teamReducer = (\r\n  state: TeamState = defaultState,\r\n  action: TeamAction\r\n) => {\r\n  switch (action.type) {\r\n    case \"GET_TEAMS_START\":\r\n      return { ...state, loading: true, error: \"\" };\r\n    case \"GET_TEAMS_SUCCESS\":\r\n      return { ...state, loading: false, data: action.payload };\r\n    case \"GET_TEAMS_ERROR\":\r\n      return { ...state, loading: false, error: \"Error fetching teams\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default teamReducer;\r\n","import { GameAction, GameState } from \"../../types/game\";\r\n\r\nconst defaultState: GameState = {\r\n  data: [],\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nconst categoryReducer = (\r\n  state: GameState = defaultState,\r\n  action: GameAction\r\n) => {\r\n  switch (action.type) {\r\n    case \"GET_GAMES_START\":\r\n      return { ...state, loading: true, error: \"\" };\r\n    case \"GET_GAMES_SUCCESS\":\r\n      return { ...state, loading: false, data: action.payload };\r\n    case \"GET_GAMES_ERROR\":\r\n      return { ...state, loading: false, error: \"Error fetching games\" };\r\n    case \"ADD_GAME_START\":\r\n      return { ...state, loading: true, error: \"\" };\r\n    case \"ADD_GAME_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: [action.payload, ...state.data],\r\n      };\r\n    case \"ADD_GAME_ERROR\":\r\n      return { ...state, loading: false, error: \"Error adding game\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default categoryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { TeamState } from \"../types/team\";\r\nimport { GameState } from \"../types/game\";\r\nimport teamReducer from \"./reducers/teamReducer\";\r\nimport gameReducer from \"./reducers/gameReducer\";\r\n\r\nexport interface AppState {\r\n  teams: TeamState;\r\n  games: GameState;\r\n}\r\n\r\nconst rootReducer = combineReducers<AppState>({\r\n  teams: teamReducer,\r\n  games: gameReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport rootReducer from \"./store\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}